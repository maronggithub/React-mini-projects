{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst weatherDataStore = createSlice({\n  name: \"cityname\",\n  initialState: {\n    cityName: \"\",\n    weatherData: \"\"\n  },\n  reducers: {\n    // 在recucer里面设置action\n    setCityName: (state, action) => {\n      state.cityName = action.payload;\n    },\n    setWeatherData: (state, action) => {\n      state.weatherData = action.payload;\n    }\n  }\n});\nconst {\n  setCityName,\n  setWeatherData\n} = weatherDataStore.actions;\n//异步请求部分\n\n// 调用 API 获取城市名字\nconst fetchUserCity = () => {\n  return async dispatch => {\n    try {\n      const cityRes = await axios.get(\"http://ip-api.com/json/\");\n      console.log(cityRes);\n      dispatch(setCityName(cityRes.data.city));\n    } catch (error) {\n      console.error(\"Error fetching user city:\", error);\n    }\n  };\n};\nconst fetchWeatherData = () => {\n  return async (dispatch, getState) => {\n    const apiKey = \"1b18bc4c88485aa26026e6d4f1726052\";\n    const state = getState();\n    const cityName = state.cityName;\n    if (cityName) {\n      try {\n        const apiUrl = `http://api.openweathermap.org/geo/1.0/direct?q=${cityName}&appid=${apiKey}`;\n        const WeatherRes = await axios.get(apiUrl);\n        dispatch(setWeatherData(WeatherRes.data));\n        console.log(+WeatherRes);\n      } catch (error) {\n        console.error(\"Error fetching weather data:\", error);\n      }\n    }\n  };\n};\nconst weatherDataReducer = weatherDataStore.reducer;\nexport { setCityName, fetchUserCity, fetchWeatherData };\nexport default weatherDataReducer;","map":{"version":3,"names":["createSlice","axios","weatherDataStore","name","initialState","cityName","weatherData","reducers","setCityName","state","action","payload","setWeatherData","actions","fetchUserCity","dispatch","cityRes","get","console","log","data","city","error","fetchWeatherData","getState","apiKey","apiUrl","WeatherRes","weatherDataReducer","reducer"],"sources":["/Users/joy/Desktop/React-mini-projects/temperature-converter-app/src/store/modules/weatherData.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\n\nconst weatherDataStore = createSlice({\n  name: \"cityname\",\n  initialState: {\n    cityName: \"\",\n    weatherData: \"\",\n  },\n  reducers: {\n    // 在recucer里面设置action\n    setCityName: (state, action) => {\n      state.cityName = action.payload;\n    },\n    setWeatherData: (state, action) => {\n      state.weatherData = action.payload;\n    },\n  },\n});\n\nconst { setCityName, setWeatherData } = weatherDataStore.actions;\n//异步请求部分\n\n// 调用 API 获取城市名字\nconst fetchUserCity = () => {\n  return async (dispatch) => {\n    try {\n      const cityRes = await axios.get(\"http://ip-api.com/json/\");\n      console.log(cityRes);\n      dispatch(setCityName(cityRes.data.city));\n    } catch (error) {\n      console.error(\"Error fetching user city:\", error);\n    }\n  };\n};\n\nconst fetchWeatherData = () => {\n  return async (dispatch, getState) => {\n    const apiKey = \"1b18bc4c88485aa26026e6d4f1726052\";\n    const state = getState();\n    const cityName = state.cityName;\n\n    if (cityName) {\n      try {\n        const apiUrl = `http://api.openweathermap.org/geo/1.0/direct?q=${cityName}&appid=${apiKey}`;\n        const WeatherRes = await axios.get(apiUrl);\n        dispatch(setWeatherData(WeatherRes.data));\n        console.log(+ WeatherRes);\n      } catch (error) {\n        console.error(\"Error fetching weather data:\", error);\n      }\n    }\n  };\n};\n\n\nconst weatherDataReducer = weatherDataStore.reducer;\nexport { setCityName,fetchUserCity,fetchWeatherData };\nexport default weatherDataReducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAGzB,MAAMC,gBAAgB,GAAGF,WAAW,CAAC;EACnCG,IAAI,EAAE,UAAU;EAChBC,YAAY,EAAE;IACZC,QAAQ,EAAE,EAAE;IACZC,WAAW,EAAE;EACf,CAAC;EACDC,QAAQ,EAAE;IACR;IACAC,WAAW,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC9BD,KAAK,CAACJ,QAAQ,GAAGK,MAAM,CAACC,OAAO;IACjC,CAAC;IACDC,cAAc,EAAEA,CAACH,KAAK,EAAEC,MAAM,KAAK;MACjCD,KAAK,CAACH,WAAW,GAAGI,MAAM,CAACC,OAAO;IACpC;EACF;AACF,CAAC,CAAC;AAEF,MAAM;EAAEH,WAAW;EAAEI;AAAe,CAAC,GAAGV,gBAAgB,CAACW,OAAO;AAChE;;AAEA;AACA,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAC1B,OAAO,MAAOC,QAAQ,IAAK;IACzB,IAAI;MACF,MAAMC,OAAO,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAC,yBAAyB,CAAC;MAC1DC,OAAO,CAACC,GAAG,CAACH,OAAO,CAAC;MACpBD,QAAQ,CAACP,WAAW,CAACQ,OAAO,CAACI,IAAI,CAACC,IAAI,CAAC,CAAC;IAC1C,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdJ,OAAO,CAACI,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;AACH,CAAC;AAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAC7B,OAAO,OAAOR,QAAQ,EAAES,QAAQ,KAAK;IACnC,MAAMC,MAAM,GAAG,kCAAkC;IACjD,MAAMhB,KAAK,GAAGe,QAAQ,CAAC,CAAC;IACxB,MAAMnB,QAAQ,GAAGI,KAAK,CAACJ,QAAQ;IAE/B,IAAIA,QAAQ,EAAE;MACZ,IAAI;QACF,MAAMqB,MAAM,GAAG,kDAAkDrB,QAAQ,UAAUoB,MAAM,EAAE;QAC3F,MAAME,UAAU,GAAG,MAAM1B,KAAK,CAACgB,GAAG,CAACS,MAAM,CAAC;QAC1CX,QAAQ,CAACH,cAAc,CAACe,UAAU,CAACP,IAAI,CAAC,CAAC;QACzCF,OAAO,CAACC,GAAG,CAAC,CAAEQ,UAAU,CAAC;MAC3B,CAAC,CAAC,OAAOL,KAAK,EAAE;QACdJ,OAAO,CAACI,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD;IACF;EACF,CAAC;AACH,CAAC;AAGD,MAAMM,kBAAkB,GAAG1B,gBAAgB,CAAC2B,OAAO;AACnD,SAASrB,WAAW,EAACM,aAAa,EAACS,gBAAgB;AACnD,eAAeK,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}